{"ast":null,"code":"var _jsxFileName = \"/Users/ste./Documents/Codes/OASIS/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Fab, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport text from './text.json';\nconst useStyles = makeStyles(theme => ({\n  speedDial: {\n    position: 'absolute',\n    left: 'calc(50% - 240px/2)',\n    top: '45%',\n    '& .MuiFab-label': {\n      width: 'max-content',\n      padding: 2\n    },\n    width: 240\n  },\n  button: {\n    '&:hover': {\n      background: \"#EA2027\",\n      color: \"white\"\n    },\n    background: \"#EA2027\",\n    color: \"white\",\n    size: \"large\"\n  },\n  terms: {\n    background: \"none\",\n    color: 'white',\n    width: 'max-content',\n    borderRadius: 0,\n    boxShadow: 'none',\n    '&:hover': {\n      background: \"none\"\n    }\n  }\n}));\nconst useStylesTooltip = makeStyles(theme => ({\n  tooltip: {\n    display: 'none'\n  }\n}));\nconst actions = [{\n  name: ' SIGN IN / SIGN UP ',\n  href: '/signin'\n}, {\n  name: ' CONTINUE AS GUEST ',\n  href: '/onboard'\n}];\n\nfunction App(props) {\n  const classes = useStyles();\n  const classesTooltip = useStylesTooltip();\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const popoverClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const popoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const popoverOpen = Boolean(anchorEl);\n  const popoverId = popoverOpen ? 'simple-popover' : undefined;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \" FIGHT COVID-19 PUT YOUR STORY ON THE MAP\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SpeedDial, {\n    ariaLabel: \"SpeedDial tooltip example\",\n    className: classes.speedDial,\n    hidden: hidden,\n    icon: /*#__PURE__*/React.createElement(SpeedDialIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }),\n    onClose: handleClose,\n    onOpen: handleOpen,\n    open: open,\n    FabProps: {\n      className: classes.button\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpeedDialAction, {\n    key: \"terms\",\n    className: classes.terms,\n    tooltipTitle: \"Terms and Conditions\",\n    icon: /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"checkedC\",\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 24\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        \"aria-describedby\": popoverId,\n        onClick: popoverClick,\n        style: {\n          textDecoration: \"underline\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, \"Terms and Conditions\"), /*#__PURE__*/React.createElement(Popover, {\n        id: popoverId,\n        open: popoverOpen,\n        anchorEl: anchorEl,\n        onClose: popoverClose,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, text[\"Terms and Conditions\"].texts))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }),\n    TooltipClasses: classesTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), actions.map(action => /*#__PURE__*/React.createElement(SpeedDialAction, {\n    key: action.name,\n    icon: action.name,\n    display: {\n      background: action.color\n    },\n    tooltipTitle: action.name,\n    className: \"MuiFab-extended\",\n    TooltipClasses: classesTooltip,\n    onClick: () => props.history.push(action.href),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ste./Documents/Codes/OASIS/src/App.js"],"names":["React","Fab","FormControlLabel","Checkbox","Button","AddIcon","SpeedDial","SpeedDialIcon","SpeedDialAction","makeStyles","Popover","text","useStyles","theme","speedDial","position","left","top","width","padding","button","background","color","size","terms","borderRadius","boxShadow","useStylesTooltip","tooltip","display","actions","name","href","App","props","classes","classesTooltip","open","setOpen","useState","hidden","setHidden","anchorEl","setAnchorEl","popoverClick","event","currentTarget","popoverClose","popoverOpen","Boolean","popoverId","undefined","handleOpen","handleClose","className","textDecoration","vertical","horizontal","texts","map","action","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Fab, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport text from './text.json';\n\n\nconst useStyles = makeStyles((theme) => ({\n  speedDial: {\n    position: 'absolute',\n    left: 'calc(50% - 240px/2)',\n    top: '45%',\n    '& .MuiFab-label': {\n      width: 'max-content',\n      padding: 2\n    },\n    width: 240\n  },\n  button: {\n    '&:hover': {\n      background: \"#EA2027\", color: \"white\"\n    },\n    background: \"#EA2027\", color: \"white\",\n    size: \"large\"\n  },\n  terms: {\n    background: \"none\",\n    color: 'white',\n    width: 'max-content',\n    borderRadius: 0,\n    boxShadow: 'none',\n    '&:hover': {\n      background: \"none\",\n    },\n  },\n\n}))\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  tooltip: {\n    display: 'none'\n  }\n}))\n\nconst actions = [\n  { name: ' SIGN IN / SIGN UP ', href: '/signin' },\n  { name: ' CONTINUE AS GUEST ', href: '/onboard' },\n];\n\nfunction App(props) {\n  const classes = useStyles();\n  const classesTooltip = useStylesTooltip();\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const popoverClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const popoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const popoverOpen = Boolean(anchorEl);\n  const popoverId = popoverOpen ? 'simple-popover' : undefined;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"title\"> FIGHT COVID-19 PUT YOUR STORY ON THE MAP</h1>\n      <div>\n        <SpeedDial\n          ariaLabel=\"SpeedDial tooltip example\"\n          className={classes.speedDial}\n          hidden={hidden}\n          icon={<SpeedDialIcon />}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n          FabProps={{ className: classes.button }}\n        >\n          <SpeedDialAction\n            key=\"terms\"\n            className={classes.terms}\n            tooltipTitle=\"Terms and Conditions\"\n            icon={<FormControlLabel\n              control={<Checkbox name=\"checkedC\" style={{ color: \"white\" }} />}\n              label={\n                <div>\n                  <a\n                    aria-describedby={popoverId}\n                    onClick={popoverClick}\n                    style={{ textDecoration: \"underline\", color: \"white\" }}>\n                    Terms and Conditions</a>\n                  <Popover\n                    id={popoverId}\n                    open={popoverOpen}\n                    anchorEl={anchorEl}\n                    onClose={popoverClose}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                    }}\n                  >\n                    <p>{text[\"Terms and Conditions\"].texts}</p>\n                  </Popover>\n                </div>}\n\n            />}\n            TooltipClasses={classesTooltip}>\n\n          </SpeedDialAction>\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.name}\n              display={{ background: action.color }}\n              tooltipTitle={action.name}\n              className={\"MuiFab-extended\"}\n              TooltipClasses={classesTooltip}\n              onClick={() => props.history.push(action.href)}\n            ></SpeedDialAction>\n          ))}\n\n          {/* <FormControlLabel control={<Checkbox name=\"checkedC\" />} label= /> */}\n        </SpeedDial>\n        {/* <Button aria-describedby={popoverId} variant=\"contained\" color=\"primary\" onClick={popoverClick}>\n          Open Popover\n      </Button> */}\n\n      </div>\n\n      {/* <Fab style={{ background: \"#EA2027\" }} aria-label=\"add\" href=\"/onboard\" size=\"large\" className=\"fab\">\n        <AddIcon />\n      </Fab> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}