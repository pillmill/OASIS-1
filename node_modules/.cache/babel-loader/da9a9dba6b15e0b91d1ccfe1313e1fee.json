{"ast":null,"code":"var _jsxFileName = \"/Users/ste./Documents/Codes/OASIS/src/Pop.js\";\nimport React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n}));\nexport default function Pop(props) {\n  console.log(props.texts);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handlePopoverOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    onClose: handlePopoverClose // disableRestoreFocus\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"terms-wrapper\",\n    onClick: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, props.texts.map((x, i) => {\n    if (props.listIndex.indexOf(i) >= 0) return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }\n    }, \"\\u2022 \", x);else if (props.linkIndex.indexOf(i) >= 0) return /*#__PURE__*/React.createElement(\"a\", {\n      key: i,\n      href: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    }, x);else return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }\n    }, x);\n  }))));\n}","map":{"version":3,"sources":["/Users/ste./Documents/Codes/OASIS/src/Pop.js"],"names":["React","Popover","Typography","makeStyles","ErrorOutlineIcon","Button","useStyles","theme","popover","pointerEvents","paper","padding","spacing","Pop","props","console","log","texts","classes","anchorEl","setAnchorEl","useState","handlePopoverOpen","event","currentTarget","handlePopoverClose","open","Boolean","id","undefined","label","vertical","horizontal","map","x","i","listIndex","indexOf","linkIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function Pop(props) {\n  console.log(props.texts);\n  \n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  \n  return (\n    <div>\n      <div aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handlePopoverOpen}>{props.label}</div>\n      {/* <ErrorOutlineIcon  aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}></ErrorOutlineIcon> */}\n      <Popover\n        id={id}\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        onClose={handlePopoverClose}\n        // disableRestoreFocus\n      >\n        <div className=\"terms-wrapper\" onClick={handlePopoverClose}>\n          {/* {props.title} */}\n          \n            {props.texts.map((x, i) => {\n              if (props.listIndex.indexOf(i) >= 0)\n                return <p key={i}>â€¢ {x}</p>\n              else if (props.linkIndex.indexOf(i) >= 0)\n                return <a key={i} href={x}>{x}</a>\n              else\n                return <p key={i}>{x}</p>\n            })\n          }\n        </div>\n      </Popover>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}